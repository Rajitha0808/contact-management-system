Code:-
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_CONTACTS 100
#define NAME_LENGTH 50
#define PHONE_LENGTH 15

typedef struct {
	char name[NAME_LENGTH];
	char phone[PHONE_LENGTH];
} Contact;

Contact contacts[MAX_CONTACTS];
int contactCount = 0;

void addContact() {
	if (contactCount >= MAX_CONTACTS) {
		printf("Contact list is full! Cannot add more contacts.\n");
		return;
	}

	Contact newContact;
	printf("Enter name: ");
	scanf(" %[^\n]", newContact.name);
	printf("Enter phone number: ");
	scanf(" %[^\n]", newContact.phone);

	contacts[contactCount++] = newContact;
	printf("Contact added successfully!\n");
}

void viewContacts() {
	if (contactCount == 0) {
		printf("No contacts to display.\n");
		return;
	}

	printf("\nContact List:\n");
	for (int i = 0; i < contactCount; i++) {
		printf("%d. Name: %s, Phone: %s\n", i + 1, contacts[i].name, contacts[i].phone);
	}
}

void removeContact() {
	if (contactCount == 0) {
		printf("No contacts to remove.\n");
		return;
	}

	int index;
	printf("Enter the contact number to remove (1 to %d): ", contactCount);
	scanf("%d", &index);

	if (index < 1 || index > contactCount) {
		printf("Invalid contact number.\n");
		return;
	}

	// Shift contacts to overwrite the removed one
	for (int i = index - 1; i < contactCount - 1; i++) {
		contacts[i] = contacts[i + 1];
	}

	contactCount--;
	printf("Contact removed successfully!\n");
}

void menu() {
	int choice;

	do {
		printf("\nContact Management System\n");
		printf("1. Add Contact\n");
		printf("2. View Contacts\n");
		printf("3. Remove Contact\n");
		printf("4. Exit\n");
		printf("Enter your choice: ");
		scanf("%d", &choice);

		switch (choice) {
		case 1:
			addContact();
			break;
		case 2:
			viewContacts();
			break;
		case 3:
			removeContact();
			break;
		case 4:
			printf("Exiting...\n");
			break;
		default:
			printf("Invalid choice! Please try again.\n");
		}
	} while (choice != 4);
}

int main() {
	menu();
	return 0;
}

Output:

Contact Management System
1. Add Contact
2. View Contacts
3. Remove Contact
4. Exit
Enter your choice: 1
Enter name: raj
Enter phone number: 2345989422 
Contact added successfully!

Contact Management System
1. Add Contact
2. View Contacts
3. Remove Contact
4. Exit
Enter your choice: 2 
Enter name: ram
Enter phone number: 6839872809
Contact added successfully!

Contact Management System
1. Add Contact
2. View Contacts
3. Remove Contact
4. Exit
Enter your choice: 2

Contact List:
1. Name: raj, Phone: 9483764894
2. Name: ram, Phone: 6839872809

Contact Management System
1. Add Contact
2. View Contacts
3. Remove Contact
4. Exit
Enter your choice: 3
Enter the contact number to remove (1 to 2): 1
Contact removed successfully!

Contact Management System
1. Add Contact
2. View Contacts
3. Remove Contact
4. Exit
Enter your choice: 2

Contact List:
1. Name: ram, Phone: 6839872809

Contact Management System
1. Add Contact
2. View Contacts
3. Remove Contact
4. Exit
Enter your choice: 4
Exiting...

